# -*- coding: utf-8 -*-

from OpenGL.GL import *
from OpenGL.GLUT import *
import numpy as np

def lorenz(x, y, z, s=10, r=28, b=2.667):
    x_dot = s*(y - x)
    y_dot = r*x - y - x*z
    z_dot = x*y - b*z
    return x_dot, y_dot, z_dot

dt = 0.01
num_steps = 10000
xs = np.empty(num_steps + 1)
ys = np.empty(num_steps + 1)
zs = np.empty(num_steps + 1)
xs[0], ys[0], zs[0] = (0., 1., 1.05)

for i in range(num_steps):
    x_dot, y_dot, z_dot = lorenz(xs[i], ys[i], zs[i])
    xs[i + 1] = xs[i] + (x_dot * dt)
    ys[i + 1] = ys[i] + (y_dot * dt)
    zs[i + 1] = zs[i] + (z_dot * dt)


def draw():
    # ---------------------------------------------------------------
    glClear(GL_COLOR_BUFFER_BIT)
    glRotatef(0.1, 1, 1, 0)              # (角度,x,y,z)
    
    glBegin(GL_POINTS)                   # 开始绘制洛伦兹吸引子（z轴负半区）
    for i in range(0,len(xs)):
        glColor4f(0.0, 0.0, 1.0, 1.0) 
        glVertex3f(0.03*xs[i], 0.03*ys[i],0.03*zs[i])  
    glEnd()                              # 结束洛伦兹吸引子
    # ---------------------------------------------------------------
    glFlush()                            # 清空缓冲区

if __name__ == "__main__":
    glutInit()                           # 1. 初始化glut
    glutCreateWindow('OpenGL')           # 2. 创建glut窗口
    glutDisplayFunc(draw)                # 3. 注册回调函数draw()
    glutIdleFunc(draw)
    glutMainLoop()                       # 4. 进入glut主循环

    
